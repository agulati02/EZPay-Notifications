{"ast":null,"code":"var _jsxFileName = \"D:\\\\NatWest-Bootcamp\\\\EZPay\\\\sprint-3-frontend\\\\EZPay-Notifications\\\\ezpay_notifications\\\\src\\\\components\\\\PaymentReminder.js\",\n  _s = $RefreshSig$();\nimport Header from \"./Header\";\nimport ReminderTitle from \"./ReminderTitle\";\nimport \"../assets/styles/PaymentReminder.css\";\nimport \"../assets/styles/common-styles.css\";\nimport { useEffect, useRef, useState } from \"react\";\nimport BubblesBackground from \"./BubblesBackground\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Toast } from \"react-bootstrap\";\nimport AlertBox from \"./AlertBox\";\n\n/**\r\n * The PaymentReminder component manages payment reminders, including fetching, adding, and deleting reminders.\r\n * It renders a list of reminders and provides an interface for adding new reminders and confirming deletion of existing ones.\r\n * \r\n * @component\r\n * @returns {JSX.Element} The rendered payment reminder component.\r\n * \r\n * @author Anurag Gulati\r\n * @author Doneela Das\r\n * @date 14/09/2024\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PaymentReminder() {\n  _s();\n  const navigate = useNavigate();\n  let reminders = [];\n  const [showPageOverlay, setShowPageOverlay] = useState(false);\n  const [reminderList, setReminderList] = useState([]);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showPopup, setShowPopup] = useState(false);\n  const [reminderIdToBeDeleted, setReminderIdToBeDeleted] = useState(\"\");\n  const [showErrorToast, setShowErrorToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [addReminderButtonText, setAddReminderButtonText] = useState('Add Reminder');\n  const today = new Date().toISOString().split(\"T\")[0];\n\n  /**\r\n   * Formats a date string from YYYY-MM-DD to DD-MM-YYYY.\r\n   * \r\n   * @param {string} dateString - Date string in YYYY-MM-DD format.\r\n   * @returns {string} - Formatted date string in DD-MM-YYYY format.\r\n   */\n  const formatDate = dateString => {\n    const [year, month, day] = dateString.split(\"-\");\n    return `${day}-${month}-${year}`;\n  };\n\n  /**\r\n   * Fetches payment reminders for the current user from the server.\r\n   * \r\n   * @async\r\n   */\n  async function fetchPaymentReminders() {\n    let response = await fetch(`http://localhost:9090/api/payment-reminders/fetch/${sessionStorage.getItem(\"userId\")}`, {\n      \"method\": \"GET\"\n    });\n    reminders = await response.json();\n    console.log(reminders);\n    setReminderList(reminders);\n  }\n\n  /**\r\n   * Deletes a specific payment reminder.\r\n   * \r\n   * @param {string} reminderId - ID of the reminder to be deleted.\r\n   * @async\r\n   */\n  async function deletePaymentReminder(reminderId) {\n    let response = await fetch(`http://localhost:9090/api/payment-reminders/delete/${reminderId}`, {\n      \"method\": \"DELETE\"\n    });\n    if (response.ok) {\n      await fetchPaymentReminders();\n    } else {\n      throw new Error(\"Reminder Deletion Failed!\");\n    }\n  }\n\n  /**\r\n   * Adds a new payment reminder.\r\n   * \r\n   * @param {object} reminder - The reminder object containing userId, amount, dueDate, and status.\r\n   * @async\r\n   */\n  async function addPaymentReminder({\n    userId,\n    amount,\n    dueDate,\n    status\n  }) {\n    let response = await fetch(`http://localhost:9090/api/payment-reminders/add?userId=${userId}&amount=${amount}&dueDate=${dueDate}&status=${status}`, {\n      \"method\": \"POST\"\n    });\n    if (response.ok) {\n      await fetchPaymentReminders();\n    } else {\n      throw new Error(\"Reminder Addition Failed!\");\n    }\n  }\n  useEffect(() => {\n    let loginExists = sessionStorage.getItem(\"loginToken\");\n    console.log(loginExists);\n    if (loginExists === null) {\n      navigate('/');\n    }\n    fetchPaymentReminders();\n  }, []);\n\n  /**\r\n   * Toggles the form for adding a new reminder.\r\n   */\n  const handleAddReminderForm = () => {\n    setShowPageOverlay(true);\n    setShowAddForm(true);\n  };\n\n  /**\r\n   * Opens the delete confirmation popup for a specific reminder.\r\n   * \r\n   * @param {string} reminderId - The ID of the reminder to be deleted.\r\n   */\n  const handleDeleteReminder = reminderId => {\n    setShowPageOverlay(true);\n    setShowPopup(true);\n    setReminderIdToBeDeleted(reminderId);\n  };\n\n  /**\r\n   * Confirms deletion of the reminder.\r\n   */\n  const handleConfirmDelete = () => {\n    deletePaymentReminder(reminderIdToBeDeleted);\n    setShowPopup(false);\n    setShowPageOverlay(false);\n    setReminderIdToBeDeleted(\"\");\n  };\n\n  /**\r\n   * Cancels the reminder deletion.\r\n   */\n  const handleCancelDelete = () => {\n    setShowPopup(false);\n    setShowPageOverlay(false);\n  };\n  const amountRef = useRef();\n  const dueDateRef = useRef();\n  const statusRef = useRef();\n\n  /**\r\n   * Handles adding a new reminder by validating inputs and calling the add function.\r\n   */\n  const handleAddReminder = async () => {\n    if (Number(amountRef.current.value) < 0) {\n      setErrorMessage(\"Payment amount cannot be negative\");\n      setShowErrorToast(true);\n      setTimeout(() => {\n        setShowErrorToast(false);\n      }, 4000);\n      return;\n    }\n    if (!amountRef.current.value) {\n      setErrorMessage(\"Please enter a payment amount\");\n      setShowErrorToast(true);\n      setTimeout(() => {\n        setShowErrorToast(false);\n      }, 4000);\n      return;\n    }\n    if (!dueDateRef.current.value) {\n      setErrorMessage(\"Please enter a due date\");\n      setShowErrorToast(true);\n      setTimeout(() => {\n        setShowErrorToast(false);\n      }, 4000);\n      return;\n    }\n    if (!statusRef.current.value) {\n      setErrorMessage(\"Please enter a payment status\");\n      setShowErrorToast(true);\n      setTimeout(() => {\n        setShowErrorToast(false);\n      }, 4000);\n      return;\n    }\n    const dueDateString = formatDate(dueDateRef.current.value);\n    let reminder = {\n      userId: sessionStorage.getItem(\"userId\"),\n      amount: Number(amountRef.current.value),\n      dueDate: dueDateString,\n      status: statusRef.current.value\n    };\n    setAddReminderButtonText('Adding...');\n    await addPaymentReminder({\n      ...reminder\n    });\n    setAddReminderButtonText('Add Reminder');\n    amountRef.current.value = null;\n    dueDateRef.current.value = null;\n    statusRef.current.value = null;\n    setShowAddForm(false);\n    setShowPageOverlay(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BubblesBackground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), showErrorToast && /*#__PURE__*/_jsxDEV(AlertBox, {\n      errorMessage: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }, this), showPageOverlay && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-overlay\",\n      children: [showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `popup ${showPopup ? 'show' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Delete Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Do you want to delete this reminder?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirmDelete,\n          children: \"Yes, Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelDelete,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }, this), showAddForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-pr-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-pr-form-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add Payment Reminder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-pr-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Payment amount: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Enter amount\",\n              ref: amountRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Due date: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              min: today,\n              placeholder: \"(DD-MM-YYYY)\",\n              ref: dueDateRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 48\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter status\",\n              ref: statusRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-button-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"add-rem-button\",\n                onClick: handleAddReminder,\n                children: addReminderButtonText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel-rem-button\",\n                onClick: () => {\n                  setShowAddForm(false);\n                  setShowPageOverlay(false);\n                },\n                style: {\n                  width: '30%'\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(ReminderTitle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), reminderList.map((rem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rem-point\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-reminder-button\",\n            onClick: () => handleDeleteReminder(rem.reminderId),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash-o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `reminder_${index}`,\n            className: \"rem-text\",\n            children: [\"Payment of \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\"\\u20B9 \", rem.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 44\n            }, this), \" is due on \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: new Date(rem.dueDate).toLocaleDateString('en-GB')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 82\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-pr-div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-pr-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-pr-button\",\n            onClick: handleAddReminderForm,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(PaymentReminder, \"zZxFffAX1oOfyg37NWHGjucl+6A=\", false, function () {\n  return [useNavigate];\n});\n_c = PaymentReminder;\nexport default PaymentReminder;\nvar _c;\n$RefreshReg$(_c, \"PaymentReminder\");","map":{"version":3,"names":["Header","ReminderTitle","useEffect","useRef","useState","BubblesBackground","useNavigate","Toast","AlertBox","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentReminder","_s","navigate","reminders","showPageOverlay","setShowPageOverlay","reminderList","setReminderList","showAddForm","setShowAddForm","showPopup","setShowPopup","reminderIdToBeDeleted","setReminderIdToBeDeleted","showErrorToast","setShowErrorToast","errorMessage","setErrorMessage","addReminderButtonText","setAddReminderButtonText","today","Date","toISOString","split","formatDate","dateString","year","month","day","fetchPaymentReminders","response","fetch","sessionStorage","getItem","json","console","log","deletePaymentReminder","reminderId","ok","Error","addPaymentReminder","userId","amount","dueDate","status","loginExists","handleAddReminderForm","handleDeleteReminder","handleConfirmDelete","handleCancelDelete","amountRef","dueDateRef","statusRef","handleAddReminder","Number","current","value","setTimeout","dueDateString","reminder","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","style","color","type","placeholder","ref","required","min","width","map","rem","index","htmlFor","toLocaleDateString","_c","$RefreshReg$"],"sources":["D:/NatWest-Bootcamp/EZPay/sprint-3-frontend/EZPay-Notifications/ezpay_notifications/src/components/PaymentReminder.js"],"sourcesContent":["import Header from \"./Header\";\r\nimport ReminderTitle from \"./ReminderTitle\";\r\nimport \"../assets/styles/PaymentReminder.css\";\r\nimport \"../assets/styles/common-styles.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport BubblesBackground from \"./BubblesBackground\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Toast } from \"react-bootstrap\";\r\nimport AlertBox from \"./AlertBox\";\r\n\r\n/**\r\n * The PaymentReminder component manages payment reminders, including fetching, adding, and deleting reminders.\r\n * It renders a list of reminders and provides an interface for adding new reminders and confirming deletion of existing ones.\r\n * \r\n * @component\r\n * @returns {JSX.Element} The rendered payment reminder component.\r\n * \r\n * @author Anurag Gulati\r\n * @author Doneela Das\r\n * @date 14/09/2024\r\n */\r\nfunction PaymentReminder() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    let reminders = [];\r\n\r\n    const [showPageOverlay, setShowPageOverlay] = useState(false);\r\n    const [reminderList, setReminderList] = useState([]);\r\n    const [showAddForm, setShowAddForm] = useState(false);\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [reminderIdToBeDeleted, setReminderIdToBeDeleted] = useState(\"\");\r\n    const [showErrorToast, setShowErrorToast] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [addReminderButtonText, setAddReminderButtonText] = useState('Add Reminder');\r\n\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n\r\n    /**\r\n     * Formats a date string from YYYY-MM-DD to DD-MM-YYYY.\r\n     * \r\n     * @param {string} dateString - Date string in YYYY-MM-DD format.\r\n     * @returns {string} - Formatted date string in DD-MM-YYYY format.\r\n     */\r\n    const formatDate = (dateString) => {\r\n        const [year, month, day] = dateString.split(\"-\");\r\n        return `${day}-${month}-${year}`;\r\n    };\r\n\r\n    /**\r\n     * Fetches payment reminders for the current user from the server.\r\n     * \r\n     * @async\r\n     */\r\n    async function fetchPaymentReminders() {\r\n        let response = await fetch(`http://localhost:9090/api/payment-reminders/fetch/${sessionStorage.getItem(\"userId\")}`, {\r\n            \"method\": \"GET\"\r\n        });\r\n        reminders = await response.json();\r\n        console.log(reminders);\r\n        setReminderList(reminders);\r\n    }\r\n\r\n    /**\r\n     * Deletes a specific payment reminder.\r\n     * \r\n     * @param {string} reminderId - ID of the reminder to be deleted.\r\n     * @async\r\n     */\r\n    async function deletePaymentReminder(reminderId) {\r\n        let response = await fetch(`http://localhost:9090/api/payment-reminders/delete/${reminderId}`, {\r\n            \"method\": \"DELETE\"\r\n        });\r\n        if (response.ok) {\r\n            await fetchPaymentReminders();\r\n        } else {\r\n            throw new Error(\"Reminder Deletion Failed!\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a new payment reminder.\r\n     * \r\n     * @param {object} reminder - The reminder object containing userId, amount, dueDate, and status.\r\n     * @async\r\n     */\r\n    async function addPaymentReminder({ userId, amount, dueDate, status }) {\r\n        let response = await fetch(`http://localhost:9090/api/payment-reminders/add?userId=${userId}&amount=${amount}&dueDate=${dueDate}&status=${status}`, {\r\n            \"method\": \"POST\"\r\n        });\r\n        if (response.ok) {\r\n            await fetchPaymentReminders();\r\n        } else {\r\n            throw new Error(\"Reminder Addition Failed!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let loginExists = sessionStorage.getItem(\"loginToken\");\r\n        console.log(loginExists);\r\n        if (loginExists === null) {\r\n            navigate('/');\r\n        }\r\n        fetchPaymentReminders();\r\n    }, []);\r\n\r\n    /**\r\n     * Toggles the form for adding a new reminder.\r\n     */\r\n    const handleAddReminderForm = () => {\r\n        setShowPageOverlay(true);\r\n        setShowAddForm(true);\r\n    };\r\n\r\n    /**\r\n     * Opens the delete confirmation popup for a specific reminder.\r\n     * \r\n     * @param {string} reminderId - The ID of the reminder to be deleted.\r\n     */\r\n    const handleDeleteReminder = (reminderId) => {\r\n        setShowPageOverlay(true);\r\n        setShowPopup(true);\r\n        setReminderIdToBeDeleted(reminderId);\r\n    };\r\n\r\n    /**\r\n     * Confirms deletion of the reminder.\r\n     */\r\n    const handleConfirmDelete = () => {\r\n        deletePaymentReminder(reminderIdToBeDeleted);\r\n        setShowPopup(false);\r\n        setShowPageOverlay(false);\r\n        setReminderIdToBeDeleted(\"\");\r\n    };\r\n\r\n    /**\r\n     * Cancels the reminder deletion.\r\n     */\r\n    const handleCancelDelete = () => {\r\n        setShowPopup(false);\r\n        setShowPageOverlay(false);\r\n    };\r\n\r\n    const amountRef = useRef();\r\n    const dueDateRef = useRef();\r\n    const statusRef = useRef();\r\n\r\n    /**\r\n     * Handles adding a new reminder by validating inputs and calling the add function.\r\n     */\r\n    const handleAddReminder = async () => {\r\n        if (Number(amountRef.current.value) < 0) {\r\n            setErrorMessage(\"Payment amount cannot be negative\");\r\n            setShowErrorToast(true);\r\n            setTimeout(() => {\r\n                setShowErrorToast(false);\r\n            }, 4000);\r\n            return;\r\n        }\r\n        if(!amountRef.current.value) {\r\n            setErrorMessage(\"Please enter a payment amount\");\r\n            setShowErrorToast(true);\r\n            setTimeout(() => {\r\n                setShowErrorToast(false);\r\n            }, 4000);\r\n            return;\r\n        }\r\n        if(!dueDateRef.current.value) {\r\n            setErrorMessage(\"Please enter a due date\");\r\n            setShowErrorToast(true);\r\n            setTimeout(() => {\r\n                setShowErrorToast(false);\r\n            }, 4000);\r\n            return;\r\n        }\r\n        if(!statusRef.current.value) {\r\n            setErrorMessage(\"Please enter a payment status\");\r\n            setShowErrorToast(true);\r\n            setTimeout(() => {\r\n                setShowErrorToast(false);\r\n            }, 4000);\r\n            return;\r\n        }\r\n        const dueDateString = formatDate(dueDateRef.current.value);\r\n        let reminder = {\r\n            userId: sessionStorage.getItem(\"userId\"),\r\n            amount: Number(amountRef.current.value),\r\n            dueDate: dueDateString,\r\n            status: statusRef.current.value\r\n        };\r\n        setAddReminderButtonText('Adding...');\r\n        await addPaymentReminder({ ...reminder });\r\n        setAddReminderButtonText('Add Reminder');\r\n        amountRef.current.value = null;\r\n        dueDateRef.current.value = null;\r\n        statusRef.current.value = null;\r\n        setShowAddForm(false);\r\n        setShowPageOverlay(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <BubblesBackground />\r\n            \r\n            {showErrorToast &&\r\n                <AlertBox errorMessage={errorMessage} />\r\n            }\r\n\r\n            {showPageOverlay && \r\n                <div className=\"page-overlay\">\r\n                    {showPopup && \r\n                        <div className={`popup ${showPopup ? 'show' : ''}`}>\r\n                            <h2>Delete Reminder</h2>\r\n                            <p>Do you want to delete this reminder?</p>\r\n                            <button onClick={handleConfirmDelete}>Yes, Delete</button>\r\n                            <button onClick={handleCancelDelete}>Cancel</button>\r\n                        </div>\r\n                    }\r\n\r\n                    {showAddForm &&\r\n                        <div className=\"add-pr-form-container\">\r\n                            <div className=\"add-pr-form-title\">\r\n                                <h3>Add Payment Reminder</h3>\r\n                            </div>\r\n                            <div className=\"add-pr-form\">\r\n                                <div className=\"form-field\">\r\n                                    <p>Payment amount: <span style={{ color: 'red' }}>*</span></p>\r\n                                    <input type=\"number\" placeholder=\"Enter amount\" ref={amountRef} required />\r\n                                </div>\r\n                                <div className=\"form-field\">\r\n                                    <p>Due date: <span style={{ color: 'red' }}>*</span></p>\r\n                                    <input type=\"date\" min={today} placeholder=\"(DD-MM-YYYY)\" ref={dueDateRef} required />\r\n                                </div>\r\n                                <div className=\"form-field\">\r\n                                    <p>Status: <span style={{ color: 'red' }}>*</span></p>\r\n                                    <input type=\"text\" placeholder=\"Enter status\" ref={statusRef} required />\r\n                                </div>\r\n                                <div className=\"form-field\">\r\n                                    <div className=\"form-button-container\">\r\n                                        <button className=\"add-rem-button\" onClick={handleAddReminder}>\r\n                                            {addReminderButtonText}\r\n                                        </button>\r\n                                        <button className=\"cancel-rem-button\" onClick={() => {\r\n                                            setShowAddForm(false);\r\n                                            setShowPageOverlay(false);\r\n                                        }} style={{ width: '30%' }}>\r\n                                            Cancel\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n\r\n            <Header />\r\n            <div className=\"main-container\">\r\n                <ReminderTitle />\r\n                {reminderList.map((rem, index) => (\r\n                    <div className=\"reminder\" key={index}>\r\n                        <div className=\"rem-point\">\r\n                            <button className=\"delete-reminder-button\" onClick={() => handleDeleteReminder(rem.reminderId)}>\r\n                                <i className=\"fa fa-trash-o\"></i>\r\n                            </button>\r\n                            <label htmlFor={`reminder_${index}`} className=\"rem-text\">\r\n                                Payment of <b>&#8377; {rem.amount}</b> is due on <b>{new Date(rem.dueDate).toLocaleDateString('en-GB')}</b>.\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <div className=\"add-pr-div\">\r\n                    <div className=\"add-pr-button-container\">\r\n                        <button className=\"add-pr-button\" onClick={handleAddReminderForm}>\r\n                            <span>+</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PaymentReminder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}