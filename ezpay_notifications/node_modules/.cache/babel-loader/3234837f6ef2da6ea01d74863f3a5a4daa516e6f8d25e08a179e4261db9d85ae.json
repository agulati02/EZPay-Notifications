{"ast":null,"code":"var _jsxFileName = \"D:\\\\NatWest-Bootcamp\\\\EZPay\\\\sprint-3-frontend\\\\reactapp\\\\ezpay_notifications\\\\src\\\\components\\\\Notification.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from \"./Header\";\nimport { FaTimes } from 'react-icons/fa'; // Import the delete icon\nimport NotificationTitle from './NotificationTitle';\nimport '../assets/styles/Notification.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Notification() {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    fetchNotifications(); // Fetch notifications only if userId exists\n  }, []);\n  const fetchNotifications = async () => {\n    try {\n      const response = await fetch(`http://localhost:9090/api/notifications/${localStorage.getItem(\"userId\")}`);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        // Sort notifications by date before setting them\n        const sortedData = sortNotificationsByDate(data);\n        setNotifications(sortedData);\n        setMessage('');\n      } else {\n        setNotifications([]);\n        setMessage('No notifications to show.');\n      }\n    } catch (error) {\n      setMessage('Error fetching notifications, please try again.');\n    }\n  };\n  const sortNotificationsByDate = data => {\n    // Extract date from the notification content using regex\n    return data.sort((a, b) => {\n      const dateA = extractDateFromContent(a.notificationContent);\n      const dateB = extractDateFromContent(b.notificationContent);\n      return new Date(dateB) - new Date(dateA); // Sort by latest date\n    });\n  };\n  const extractDateFromContent = content => {\n    const dateMatch = content.match(/\\d{4}-\\d{2}-\\d{2}/); // Match the date in yyyy-mm-dd format\n    return dateMatch ? dateMatch[0] : '1970-01-01'; // Default to an old date if no date is found\n  };\n  const handleClearNotifications = async () => {\n    try {\n      const response = await fetch(`http://localhost:9090/api/clear/${localStorage.getItem(\"userId\")}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setNotifications([]);\n        setMessage('Notifications cleared successfully.');\n      } else {\n        setMessage('Error clearing notifications, please try again.');\n      }\n    } catch (error) {\n      setMessage('Error clearing notifications, please try again.');\n    }\n  };\n  const handleDeleteNotification = async notificationId => {\n    try {\n      const response = await fetch(`http://localhost:9090/api/deleteNotification/${notificationId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setNotifications(notifications.filter(notification => notification.id !== notificationId));\n        setMessage('Notification deleted successfully.');\n      } else {\n        setMessage('Error deleting notification.');\n      }\n    } catch (error) {\n      setMessage('Error deleting notification.');\n    }\n  };\n  const formatNotificationContent = content => {\n    const escapedContent = content.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    const formattedContent = escapedContent.replace(/\\b(success)\\b/gi, '<span style=\"color: green; font-weight: bold;\">$1</span>').replace(/\\b(failure)\\b/gi, '<span style=\"color: red; font-weight: bold;\">$1</span>').replace(/\\n/g, '<br />');\n    return {\n      __html: formattedContent\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-container\",\n      children: [/*#__PURE__*/_jsxDEV(NotificationTitle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3 message\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fi fi-rs-check-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 62\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"No notifications to display. You are all caught up!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"notification list-group-item d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rem-text\",\n              dangerouslySetInnerHTML: formatNotificationContent(notification.notificationContent)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-notification-button\",\n              onClick: () => handleDeleteNotification(notification.id),\n              children: /*#__PURE__*/_jsxDEV(FaTimes, {\n                className: \"text-danger position-absolute\",\n                style: {\n                  cursor: 'pointer',\n                  top: '10px',\n                  right: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this)]\n          }, notification.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clear-notif-btn-div\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClearNotifications,\n            className: \"btn btn-danger mt-3\",\n            children: \"Clear Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Notification, \"Iw8VEL+i9LZxT8Kxh17vajGR05w=\");\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","useState","useEffect","Header","FaTimes","NotificationTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","Notification","_s","notifications","setNotifications","message","setMessage","fetchNotifications","response","fetch","localStorage","getItem","data","json","length","sortedData","sortNotificationsByDate","error","sort","a","b","dateA","extractDateFromContent","notificationContent","dateB","Date","content","dateMatch","match","handleClearNotifications","method","ok","handleDeleteNotification","notificationId","filter","notification","id","formatNotificationContent","escapedContent","replace","formattedContent","__html","children","fileName","_jsxFileName","lineNumber","columnNumber","className","class","map","dangerouslySetInnerHTML","onClick","style","cursor","top","right","_c","$RefreshReg$"],"sources":["D:/NatWest-Bootcamp/EZPay/sprint-3-frontend/reactapp/ezpay_notifications/src/components/Notification.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport Header from \"./Header\";\r\nimport { FaTimes } from 'react-icons/fa'; // Import the delete icon\r\nimport NotificationTitle from './NotificationTitle';\r\nimport '../assets/styles/Notification.css';\r\n\r\nfunction Notification() {\r\n\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchNotifications(); // Fetch notifications only if userId exists\r\n    }, []);\r\n\r\n    const fetchNotifications = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:9090/api/notifications/${localStorage.getItem(\"userId\")}`);\r\n\r\n            const data = await response.json();\r\n\r\n            if (data && data.length > 0) {\r\n                // Sort notifications by date before setting them\r\n                const sortedData = sortNotificationsByDate(data);\r\n                setNotifications(sortedData);\r\n                setMessage('');\r\n            } else {\r\n                setNotifications([]);\r\n                setMessage('No notifications to show.');\r\n            }\r\n        } catch (error) {\r\n            setMessage('Error fetching notifications, please try again.');\r\n        }\r\n    };\r\n\r\n    const sortNotificationsByDate = (data) => {\r\n        // Extract date from the notification content using regex\r\n        return data.sort((a, b) => {\r\n            const dateA = extractDateFromContent(a.notificationContent);\r\n            const dateB = extractDateFromContent(b.notificationContent);\r\n            \r\n            return new Date(dateB) - new Date(dateA); // Sort by latest date\r\n        });\r\n    };\r\n\r\n    const extractDateFromContent = (content) => {\r\n        const dateMatch = content.match(/\\d{4}-\\d{2}-\\d{2}/); // Match the date in yyyy-mm-dd format\r\n        return dateMatch ? dateMatch[0] : '1970-01-01'; // Default to an old date if no date is found\r\n    };\r\n\r\n    const handleClearNotifications = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:9090/api/clear/${localStorage.getItem(\"userId\")}`, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            if (response.ok) {\r\n                setNotifications([]);\r\n                setMessage('Notifications cleared successfully.');\r\n            } else {\r\n                setMessage('Error clearing notifications, please try again.');\r\n            }\r\n        } catch (error) {\r\n            setMessage('Error clearing notifications, please try again.');\r\n        }\r\n    };\r\n\r\n    const handleDeleteNotification = async (notificationId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:9090/api/deleteNotification/${notificationId}`, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            if (response.ok) {\r\n                setNotifications(notifications.filter(notification => notification.id !== notificationId));\r\n                setMessage('Notification deleted successfully.');\r\n            } else {\r\n                setMessage('Error deleting notification.');\r\n            }\r\n        } catch (error) {\r\n            setMessage('Error deleting notification.');\r\n        }\r\n    };\r\n\r\n    const formatNotificationContent = (content) => {\r\n        const escapedContent = content.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n        const formattedContent = escapedContent\r\n            .replace(/\\b(success)\\b/gi, '<span style=\"color: green; font-weight: bold;\">$1</span>')\r\n            .replace(/\\b(failure)\\b/gi, '<span style=\"color: red; font-weight: bold;\">$1</span>')\r\n            .replace(/\\n/g, '<br />');\r\n\r\n        return { __html: formattedContent };\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"notification-container\">\r\n                <NotificationTitle />\r\n                {message && (\r\n                    <p className=\"mt-3 message\">\r\n                        <i class=\"fi fi-rs-check-circle\"></i><br />\r\n                        <span>No notifications to display. You are all caught up!</span>\r\n                    </p>\r\n                )}\r\n                {notifications.length > 0 && (\r\n                    <div className=\"mt-3\">\r\n                        <ul className=\"list-group\">\r\n                            {notifications.map((notification) => (\r\n                                <li key={notification.id} className=\"notification list-group-item d-flex justify-content-between align-items-center\">\r\n                                    <span className=\"rem-text\" dangerouslySetInnerHTML={formatNotificationContent(notification.notificationContent)} />\r\n                                    <button\r\n                                        className=\"delete-notification-button\"\r\n                                        onClick={() => handleDeleteNotification(notification.id)}\r\n                                    >\r\n                                        <FaTimes\r\n                                            className=\"text-danger position-absolute\"\r\n                                            style={{ cursor: 'pointer', top: '10px', right: '10px' }}\r\n                                        />\r\n                                    </button>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        <div className='clear-notif-btn-div'>\r\n                            <button onClick={handleClearNotifications} className=\"btn btn-danger mt-3\">\r\n                                Clear Notifications\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Notification;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}