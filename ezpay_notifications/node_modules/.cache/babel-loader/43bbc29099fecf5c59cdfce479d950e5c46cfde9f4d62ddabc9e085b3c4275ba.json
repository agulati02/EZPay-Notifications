{"ast":null,"code":"var _jsxFileName = \"D:\\\\NatWest-Bootcamp\\\\EZPay\\\\sprint-3-frontend\\\\EZPay-Notifications\\\\ezpay_notifications\\\\src\\\\components\\\\PaymentReminder.js\",\n  _s = $RefreshSig$();\nimport Header from \"./Header\";\nimport ReminderTitle from \"./ReminderTitle\";\nimport \"../assets/styles/PaymentReminder.css\";\nimport \"../assets/styles/common-styles.css\";\nimport { useEffect, useRef, useState } from \"react\";\nimport BubblesBackground from \"./BubblesBackground\";\nimport { useNavigate } from \"react-router-dom\";\n\n/**\r\n * The PaymentReminder component manages payment reminders, including fetching, adding, and deleting reminders.\r\n * It renders a list of reminders and provides an interface for adding new reminders and confirming deletion of existing ones.\r\n * \r\n * @component\r\n * @returns {JSX.Element} The rendered payment reminder component\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PaymentReminder() {\n  _s();\n  const navigate = useNavigate();\n\n  // Local variable to hold reminders\n  let reminders = [];\n\n  // State for storing the list of reminders\n  const [reminderList, setReminderList] = useState([]);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showPopup, setShowPopup] = useState(false);\n  const [reminderIdToBeDeleted, setReminderIdToBeDeleted] = useState(\"\");\n  const [showErrorToast, setShowErrorToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const today = new Date().toISOString().split(\"T\")[0]; // Today's date in YYYY-MM-DD format\n\n  /**\r\n   * Helper function to format a date string from YYYY-MM-DD to DD-MM-YYYY.\r\n   * \r\n   * @param {string} dateString - Date string in YYYY-MM-DD format\r\n   * @returns {string} - Formatted date string in DD-MM-YYYY format\r\n   */\n  const formatDate = dateString => {\n    const [year, month, day] = dateString.split(\"-\");\n    return `${day}-${month}-${year}`;\n  };\n\n  /**\r\n   * Fetches payment reminders for the current user from the server.\r\n   * \r\n   * @async\r\n   */\n  async function fetchPaymentReminders() {\n    let response = await fetch(`http://localhost:9090/api/payment-reminders/fetch/${sessionStorage.getItem(\"userId\")}`, {\n      \"method\": \"GET\"\n    });\n    reminders = await response.json();\n    console.log(reminders);\n    setReminderList(reminders);\n  }\n\n  /**\r\n   * Deletes a specific payment reminder.\r\n   * \r\n   * @param {string} reminderId - ID of the reminder to be deleted\r\n   * @async\r\n   */\n  async function deletePaymentReminder(reminderId) {\n    let response = await fetch(`http://localhost:9090/api/payment-reminders/delete/${reminderId}`, {\n      \"method\": \"DELETE\"\n    });\n    if (response.ok) {\n      await fetchPaymentReminders(); // Refresh the reminder list\n    } else {\n      throw new Error(\"Reminder Deletion Failed!\");\n    }\n  }\n\n  /**\r\n   * Adds a new payment reminder.\r\n   * \r\n   * @param {object} reminder - The reminder object containing userId, amount, dueDate, and status\r\n   * @async\r\n   */\n  async function addPaymentReminder({\n    userId,\n    amount,\n    dueDate,\n    status\n  }) {\n    let response = await fetch(`http://localhost:9090/api/payment-reminders/add?userId=${userId}&amount=${amount}&dueDate=${dueDate}&status=${status}`, {\n      \"method\": \"POST\"\n    });\n    if (response.ok) {\n      await fetchPaymentReminders(); // Refresh the reminder list\n    } else {\n      throw new Error(\"Reminder Addition Failed!\");\n    }\n  }\n\n  // Fetch reminders when the component loads\n  useEffect(() => {\n    let loginExists = sessionStorage.getItem(\"loginToken\");\n    console.log(loginExists);\n    if (loginExists === null) {\n      navigate('/');\n    }\n    fetchPaymentReminders();\n  }, []);\n\n  /**\r\n   * Toggles the form for adding a new reminder.\r\n   */\n  const handleAddReminderForm = () => {\n    setShowAddForm(!showAddForm);\n  };\n\n  /**\r\n   * Opens the delete confirmation popup for a specific reminder.\r\n   * \r\n   * @param {string} reminderId - The ID of the reminder to be deleted\r\n   */\n  const handleDeleteReminder = reminderId => {\n    setShowPopup(true);\n    setReminderIdToBeDeleted(reminderId);\n  };\n\n  /**\r\n   * Confirms deletion of the reminder.\r\n   */\n  const handleConfirmDelete = () => {\n    deletePaymentReminder(reminderIdToBeDeleted);\n    setShowPopup(false);\n    setReminderIdToBeDeleted(\"\");\n  };\n\n  /**\r\n   * Cancels the reminder deletion.\r\n   */\n  const handleCancelDelete = () => {\n    setShowPopup(false);\n  };\n\n  // Refs for form inputs\n  const amountRef = useRef();\n  const dueDateRef = useRef();\n  const statusRef = useRef();\n\n  /**\r\n   * Handles adding a new reminder by validating inputs and calling the add function.\r\n   */\n  const handleAddReminder = () => {\n    if (Number(amountRef.current.value) < 0) {\n      setErrorMessage(\"Payment amount cannot be negative\");\n      setShowErrorToast(true);\n      setTimeout(() => {\n        setShowErrorToast(false);\n      }, 4000);\n      return;\n    }\n    if (!amountRef.current.value) {\n      setErrorMessage(\"Please enter a payment amount\");\n      setShowErrorToast(true);\n      setTimeout(() => {\n        setShowErrorToast(false);\n      }, 4000);\n      return;\n    }\n    if (!dueDateRef.current.value) {\n      setErrorMessage(\"Please enter a due date\");\n      setShowErrorToast(true);\n      setTimeout(() => {\n        setShowErrorToast(false);\n      }, 4000);\n      return;\n    }\n    if (!statusRef.current.value) {\n      setErrorMessage(\"Please enter a payment status\");\n      setShowErrorToast(true);\n      setTimeout(() => {\n        setShowErrorToast(false);\n      }, 4000);\n      return;\n    }\n    const dueDateString = formatDate(dueDateRef.current.value);\n    let reminder = {\n      userId: sessionStorage.getItem(\"userId\"),\n      amount: Number(amountRef.current.value),\n      dueDate: dueDateString,\n      status: statusRef.current.value\n    };\n    addPaymentReminder({\n      ...reminder\n    });\n    setShowAddForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BubblesBackground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), showErrorToast && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-toast-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-toast\",\n        children: /*#__PURE__*/_jsxDEV(Toast, {\n          children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fi fi-br-exclamation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this), \" \", errorMessage]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(ReminderTitle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), reminderList.map((rem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rem-point\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-reminder-button\",\n            onClick: () => handleDeleteReminder(rem.reminderId),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash-o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `reminder_${index}`,\n            className: \"rem-text\",\n            children: [\"Payment of \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\"\\u20B9 \", rem.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 44\n            }, this), \" is due on \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: new Date(rem.dueDate).toLocaleDateString('en-GB')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 82\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this)), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `popup-overlay ${showPopup ? 'show' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `popup ${showPopup ? 'show' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Delete Reminder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Do you want to delete this reminder?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirmDelete,\n            children: \"Yes, Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelDelete,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-pr-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-pr-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-pr-button\",\n            onClick: handleAddReminderForm,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-pr-form-overlay \" + (showAddForm ? \"display-form-overlay\" : null),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-pr-form-container \" + (showAddForm ? \"display-form\" : null),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-pr-form-title\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Add Payment Reminder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-pr-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Payment amount: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'red'\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 56\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  placeholder: \"Enter amount\",\n                  ref: amountRef,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Due date: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'red'\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 50\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  min: today,\n                  placeholder: \"(DD-MM-YYYY)\",\n                  ref: dueDateRef,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'red'\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 48\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter status\",\n                  ref: statusRef,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-button-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"add-rem-button\",\n                    onClick: handleAddReminder,\n                    children: \"Add Reminder\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"cancel-rem-button\",\n                    onClick: () => setShowAddForm(false),\n                    style: {\n                      width: '30%'\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(PaymentReminder, \"dn+zNSRsOipaimwJonxp11zm56Y=\", false, function () {\n  return [useNavigate];\n});\n_c = PaymentReminder;\nexport default PaymentReminder;\nvar _c;\n$RefreshReg$(_c, \"PaymentReminder\");","map":{"version":3,"names":["Header","ReminderTitle","useEffect","useRef","useState","BubblesBackground","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentReminder","_s","navigate","reminders","reminderList","setReminderList","showAddForm","setShowAddForm","showPopup","setShowPopup","reminderIdToBeDeleted","setReminderIdToBeDeleted","showErrorToast","setShowErrorToast","errorMessage","setErrorMessage","today","Date","toISOString","split","formatDate","dateString","year","month","day","fetchPaymentReminders","response","fetch","sessionStorage","getItem","json","console","log","deletePaymentReminder","reminderId","ok","Error","addPaymentReminder","userId","amount","dueDate","status","loginExists","handleAddReminderForm","handleDeleteReminder","handleConfirmDelete","handleCancelDelete","amountRef","dueDateRef","statusRef","handleAddReminder","Number","current","value","setTimeout","dueDateString","reminder","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Toast","Body","class","map","rem","index","onClick","htmlFor","toLocaleDateString","style","color","type","placeholder","ref","required","min","width","_c","$RefreshReg$"],"sources":["D:/NatWest-Bootcamp/EZPay/sprint-3-frontend/EZPay-Notifications/ezpay_notifications/src/components/PaymentReminder.js"],"sourcesContent":["import Header from \"./Header\";\r\nimport ReminderTitle from \"./ReminderTitle\";\r\nimport \"../assets/styles/PaymentReminder.css\";\r\nimport \"../assets/styles/common-styles.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport BubblesBackground from \"./BubblesBackground\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n/**\r\n * The PaymentReminder component manages payment reminders, including fetching, adding, and deleting reminders.\r\n * It renders a list of reminders and provides an interface for adding new reminders and confirming deletion of existing ones.\r\n * \r\n * @component\r\n * @returns {JSX.Element} The rendered payment reminder component\r\n */\r\nfunction PaymentReminder() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // Local variable to hold reminders\r\n    let reminders = [];\r\n\r\n    // State for storing the list of reminders\r\n    const [reminderList, setReminderList] = useState([]);\r\n    const [showAddForm, setShowAddForm] = useState(false);\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [reminderIdToBeDeleted, setReminderIdToBeDeleted] = useState(\"\");\r\n    const [showErrorToast, setShowErrorToast] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const today = new Date().toISOString().split(\"T\")[0]; // Today's date in YYYY-MM-DD format\r\n\r\n    /**\r\n     * Helper function to format a date string from YYYY-MM-DD to DD-MM-YYYY.\r\n     * \r\n     * @param {string} dateString - Date string in YYYY-MM-DD format\r\n     * @returns {string} - Formatted date string in DD-MM-YYYY format\r\n     */\r\n    const formatDate = (dateString) => {\r\n        const [year, month, day] = dateString.split(\"-\");\r\n        return `${day}-${month}-${year}`;\r\n    };\r\n\r\n    /**\r\n     * Fetches payment reminders for the current user from the server.\r\n     * \r\n     * @async\r\n     */\r\n    async function fetchPaymentReminders() {\r\n        let response = await fetch(`http://localhost:9090/api/payment-reminders/fetch/${sessionStorage.getItem(\"userId\")}`, {\r\n            \"method\": \"GET\"\r\n        });\r\n        reminders = await response.json();\r\n        console.log(reminders);\r\n        setReminderList(reminders);\r\n    }\r\n\r\n    /**\r\n     * Deletes a specific payment reminder.\r\n     * \r\n     * @param {string} reminderId - ID of the reminder to be deleted\r\n     * @async\r\n     */\r\n    async function deletePaymentReminder(reminderId) {\r\n        let response = await fetch(`http://localhost:9090/api/payment-reminders/delete/${reminderId}`, {\r\n            \"method\": \"DELETE\"\r\n        });\r\n        if (response.ok) {\r\n            await fetchPaymentReminders(); // Refresh the reminder list\r\n        } else {\r\n            throw new Error(\"Reminder Deletion Failed!\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a new payment reminder.\r\n     * \r\n     * @param {object} reminder - The reminder object containing userId, amount, dueDate, and status\r\n     * @async\r\n     */\r\n    async function addPaymentReminder({ userId, amount, dueDate, status }) {\r\n        let response = await fetch(`http://localhost:9090/api/payment-reminders/add?userId=${userId}&amount=${amount}&dueDate=${dueDate}&status=${status}`, {\r\n            \"method\": \"POST\"\r\n        });\r\n        if (response.ok) {\r\n            await fetchPaymentReminders(); // Refresh the reminder list\r\n        } else {\r\n            throw new Error(\"Reminder Addition Failed!\");\r\n        }\r\n    }\r\n\r\n    // Fetch reminders when the component loads\r\n    useEffect(() => {\r\n        let loginExists = sessionStorage.getItem(\"loginToken\");\r\n        console.log(loginExists);\r\n        if (loginExists === null) {\r\n            navigate('/');\r\n        }\r\n        fetchPaymentReminders();\r\n    }, []);\r\n\r\n    /**\r\n     * Toggles the form for adding a new reminder.\r\n     */\r\n    const handleAddReminderForm = () => {\r\n        setShowAddForm(!showAddForm);\r\n    };\r\n\r\n    /**\r\n     * Opens the delete confirmation popup for a specific reminder.\r\n     * \r\n     * @param {string} reminderId - The ID of the reminder to be deleted\r\n     */\r\n    const handleDeleteReminder = (reminderId) => {\r\n        setShowPopup(true);\r\n        setReminderIdToBeDeleted(reminderId);\r\n    };\r\n\r\n    /**\r\n     * Confirms deletion of the reminder.\r\n     */\r\n    const handleConfirmDelete = () => {\r\n        deletePaymentReminder(reminderIdToBeDeleted);\r\n        setShowPopup(false);\r\n        setReminderIdToBeDeleted(\"\");\r\n    };\r\n\r\n    /**\r\n     * Cancels the reminder deletion.\r\n     */\r\n    const handleCancelDelete = () => {\r\n        setShowPopup(false);\r\n    };\r\n\r\n    // Refs for form inputs\r\n    const amountRef = useRef();\r\n    const dueDateRef = useRef();\r\n    const statusRef = useRef();\r\n\r\n    /**\r\n     * Handles adding a new reminder by validating inputs and calling the add function.\r\n     */\r\n    const handleAddReminder = () => {\r\n        if (Number(amountRef.current.value) < 0) {\r\n            setErrorMessage(\"Payment amount cannot be negative\");\r\n            setShowErrorToast(true);\r\n            setTimeout(() => {\r\n                setShowErrorToast(false);\r\n            }, 4000);\r\n            return;\r\n        }\r\n        if(!amountRef.current.value) {\r\n            setErrorMessage(\"Please enter a payment amount\");\r\n            setShowErrorToast(true);\r\n            setTimeout(() => {\r\n                setShowErrorToast(false);\r\n            }, 4000);\r\n            return;\r\n        }\r\n        if(!dueDateRef.current.value) {\r\n            setErrorMessage(\"Please enter a due date\");\r\n            setShowErrorToast(true);\r\n            setTimeout(() => {\r\n                setShowErrorToast(false);\r\n            }, 4000);\r\n            return;\r\n        }\r\n        if(!statusRef.current.value) {\r\n            setErrorMessage(\"Please enter a payment status\");\r\n            setShowErrorToast(true);\r\n            setTimeout(() => {\r\n                setShowErrorToast(false);\r\n            }, 4000);\r\n            return;\r\n        }\r\n        const dueDateString = formatDate(dueDateRef.current.value);\r\n        let reminder = {\r\n            userId: sessionStorage.getItem(\"userId\"),\r\n            amount: Number(amountRef.current.value),\r\n            dueDate: dueDateString,\r\n            status: statusRef.current.value\r\n        };\r\n        addPaymentReminder({ ...reminder });\r\n        setShowAddForm(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <BubblesBackground />\r\n            <Header />\r\n            {showErrorToast &&\r\n                <div className=\"error-toast-div\">\r\n                    <div className=\"error-toast\">\r\n                        <Toast>\r\n                            <Toast.Body>\r\n                                <span className=\"error-message\">\r\n                                <i class=\"fi fi-br-exclamation\"></i> {errorMessage}\r\n                                </span>\r\n                            </Toast.Body>\r\n                        </Toast>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className=\"main-container\">\r\n                <ReminderTitle />\r\n                {/* Render the list of reminders */}\r\n                {reminderList.map((rem, index) => (\r\n                    <div className=\"reminder\" key={index}>\r\n                        <div className=\"rem-point\">\r\n                            <button className=\"delete-reminder-button\" onClick={() => handleDeleteReminder(rem.reminderId)}>\r\n                                <i className=\"fa fa-trash-o\"></i>\r\n                            </button>\r\n                            <label htmlFor={`reminder_${index}`} className=\"rem-text\">\r\n                                Payment of <b>&#8377; {rem.amount}</b> is due on <b>{new Date(rem.dueDate).toLocaleDateString('en-GB')}</b>.\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                {/* Delete confirmation popup */}\r\n                {showPopup && (\r\n                    <div className={`popup-overlay ${showPopup ? 'show' : ''}`}>\r\n                        <div className={`popup ${showPopup ? 'show' : ''}`}>\r\n                            <h2>Delete Reminder</h2>\r\n                            <p>Do you want to delete this reminder?</p>\r\n                            <button onClick={handleConfirmDelete}>Yes, Delete</button>\r\n                            <button onClick={handleCancelDelete}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {/* Add Reminder button and form */}\r\n                <div className=\"add-pr-div\">\r\n                    <div className=\"add-pr-button-container\">\r\n                        <button className=\"add-pr-button\" onClick={handleAddReminderForm}>\r\n                            <span>+</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className={\"add-pr-form-overlay \" + (showAddForm ? \"display-form-overlay\" : null)}>\r\n                        <div className={\"add-pr-form-container \" + (showAddForm ? \"display-form\" : null)}>\r\n                            <div className=\"add-pr-form-title\">\r\n                                <h3>Add Payment Reminder</h3>\r\n                            </div>\r\n                            <div className=\"add-pr-form\">\r\n                                <div className=\"form-field\">\r\n                                    <p>Payment amount: <span style={{ color: 'red' }}>*</span></p>\r\n                                    <input type=\"number\" placeholder=\"Enter amount\" ref={amountRef} required />\r\n                                </div>\r\n                                <div className=\"form-field\">\r\n                                    <p>Due date: <span style={{ color: 'red' }}>*</span></p>\r\n                                    <input type=\"date\" min={today} placeholder=\"(DD-MM-YYYY)\" ref={dueDateRef} required />\r\n                                </div>\r\n                                <div className=\"form-field\">\r\n                                    <p>Status: <span style={{ color: 'red' }}>*</span></p>\r\n                                    <input type=\"text\" placeholder=\"Enter status\" ref={statusRef} required />\r\n                                </div>\r\n                                <div className=\"form-field\">\r\n                                    <div className=\"form-button-container\">\r\n                                        <button className=\"add-rem-button\" onClick={handleAddReminder}>\r\n                                            Add Reminder\r\n                                        </button>\r\n                                        <button className=\"cancel-rem-button\" onClick={() => setShowAddForm(false)} style={{ width: '30%' }}>\r\n                                            Cancel\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PaymentReminder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}